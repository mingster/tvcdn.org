import type { LinePayApiClients } from "../payment-api/type";
import { FormatError } from "./error/format";
import type {
	EmptyObject,
	GeneralRequestConfig,
	GeneralResponseBody,
} from "./type";

/** Request */
export type CheckPaymentStatusRequestParams = EmptyObject;

export type CheckPaymentStatusRequestConfig = GeneralRequestConfig & {
	/**
	 * Payment transaction ID generated by LINE Pay
	 */
	transactionId: string;
	/**
	 * Request parameters of payment detail API
	 */
	params: CheckPaymentStatusRequestParams;
};

/** Response */
export type Shipping = {
	/**
	 * Shipping method ID selected by user
	 */
	methodId: string;
	/**
	 * Shipping fee
	 */
	feeAmount: number;
};

export type Info = {
	/**
	 * Shipping information
	 */
	shipping?: Shipping;
};

export type CheckPaymentStatusResponseBody = GeneralResponseBody & {
	/**
	 * Payment information
	 */
	info?: Info[];
};

export const defaultTimeout = 20000;

export const checkPaymentStatusWithClient: LinePayApiClients["checkPaymentStatus"] =
	(httpClient) => {
		return async ({ transactionId, params, timeout }) => {
			if (!params) throw new FormatError('"params" is required');

			if (!transactionId) throw new FormatError('"transactionId" is required');

			const { data } = await httpClient.get<
				CheckPaymentStatusRequestParams,
				CheckPaymentStatusResponseBody
			>(`/v3/payments/requests/${transactionId}/check`, {
				params,
				timeout: timeout ?? defaultTimeout,
			});

			return data;
		};
	};
